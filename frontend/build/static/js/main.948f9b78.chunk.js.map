{"version":3,"sources":["styles/css/App.module.css","components/MyNavBar.js","components/Hero.js","components/ExampleButton.js","components/ExampleWrapper.js","components/Uploader/Dropzone.js","components/Uploader/Progress.js","components/Uploader/Upload.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","section","work","heroContainer","heroText","link","App-link","navbar","bg-transparent","appName","MyNavBar","state","isTop","_this2","this","document","addEventListener","window","scrollY","setState","react_default","a","createElement","Fragment","Navbar_default","varient","bg","sticky","Brand","href","className","go","Component","Hero","styles","ExampleButton","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Button_default","onClick","toggle","variant","React","Dropzone","_this","hightlight","fileInputRef","createRef","openFileDialog","bind","assertThisInitialized","onFilesAdded","onDragOver","onDragLeave","onDrop","disabled","current","click","evt","files","target","array","fileListToArray","event","preventDefault","disabed","dataTransfer","list","i","length","push","item","concat","style","cursor","ref","type","multiple","onChange","alt","src","Progress","width","progress","Upload","uploading","uploadProgress","successfullUploaded","uploadFiles","sendRequest","renderActions","prevState","promises","forEach","file","Promise","all","_this3","resolve","reject","req","XMLHttpRequest","upload","lengthComputable","copy","objectSpread","name","percentage","loaded","total","response","formData","FormData","append","open","send","components_Uploader_Progress","opacity","_this4","_this5","components_Uploader_Dropzone","map","key","renderProgress","App","console","log","black","components_MyNavBar","components_Hero","Jumbotron_default","Container_default","App_header","components_Uploader_Upload","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.948f9b78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2HsH7\",\"section\":\"App_section__1kC7T\",\"work\":\"App_work__3Cb6P\",\"heroContainer\":\"App_heroContainer__3j77m\",\"heroText\":\"App_heroText__2GKSC\",\"link\":\"App_link__1QTKU\",\"App-link\":\"App_App-link__3NcqF\",\"navbar\":\"App_navbar__97F85\",\"bg-transparent\":\"App_bg-transparent__3hN7W\",\"appName\":\"App_appName__kKnXV\"};","import React, { Component } from \"react\";\n// import styles from \"../styles/css/App.module.css\";\nimport { GoFlame } from \"react-icons/go\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\n/* Example Navbar that we can customize */\nclass MyNavBar extends Component {\n  state = {\n    isTop: true\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"scroll\", () => {\n      const isTop = window.scrollY < 80;\n      if (isTop !== this.state.isTop) {\n        this.setState({ isTop });\n      }\n    });\n  }\n\n  // NOTE transparent is not a builtin - instead I make my own background class\n  // called bg-transparent - all bg=\"\" does it set a class name to bg-\"\"\n  render() {\n    return (\n      <>\n        <Navbar\n          varient=\"dark\"\n          bg={this.state.isTop ? \"dark\" : \"transparent\"}\n          sticky=\"top\"\n        >\n          <Navbar.Brand href=\"#home\">\n            <div className=\"appName\">\n              <GoFlame />\n              {\" GuaGAN\"}\n            </div>\n          </Navbar.Brand>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default MyNavBar;\n","import React, { Component } from \"react\";\nimport styles from \"../styles/css/App.module.css\";\n\n/* Example Hero that we can customize */\nclass Hero extends Component {\n  render() {\n    return (\n      <div className={styles.heroContainer}>\n        <p className={styles.heroText}>GuaGAN - Generate Realistic Images from Sketches</p>\n      </div>\n    );\n  }\n}\n\nexport default Hero;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"../styles/css/App.module.css\";\n\n/* Example Hero that we can customize */\nclass ExampleButton extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // toggle came from the upper level component - it is still bound to it\n  render() {\n    return (\n      <Button onClick={this.props.toggle} variant=\"primary\">\n        Primary\n      </Button>\n    );\n  }\n}\n\nexport default ExampleButton;\n","import React, { Component } from \"react\";\nimport styles from \"../styles/css/App.module.css\";\nimport ExampleButton from \"./ExampleButton\";\n\nclass ExampleWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isToggleOn: true };\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // This is the function we will pass to a child component that is still bound to\n  // us -> it will let that component modify something up here!\n  handleClick() {\n    fetch(`http://${this.props.url}`, { mode: \"cors\" })\n      .then(response => response.json())\n      .then(response => {\n        // We have the JSON response here!\n        console.log(JSON.stringify(response));\n\n        // We trigger the wrapper function here!!!\n        this.setState(state => ({\n          isToggleOn: !state.isToggleOn\n        }));\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <ExampleButton toggle={this.handleClick} />\n        <p> {this.state.isToggleOn ? \"ON\" : \"OFF\"} </p>\n      </div>\n    );\n  }\n}\n\nexport default ExampleWrapper;\n","import React, { Component } from \"react\";\nimport \"./Dropzone.css\";\n\nclass Dropzone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hightlight: false };\n    this.fileInputRef = React.createRef();\n\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return;\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    if (this.props.disabled) return;\n    const files = evt.target.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    this.setState({ hightlight: true });\n  }\n\n  onDragLeave(event) {\n    this.setState({ hightlight: false });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    const files = event.dataTransfer.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n    this.setState({ hightlight: false });\n  }\n\n  fileListToArray(list) {\n    const array = [];\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n    return array;\n  }\n\n  render() {\n    return (\n      <div\n        className={`Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        onClick={this.openFileDialog}\n        style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}\n      >\n        <input\n          ref={this.fileInputRef}\n          className=\"FileInput\"\n          type=\"file\"\n          multiple\n          onChange={this.onFilesAdded}\n        />\n        <img\n          alt=\"upload\"\n          className=\"Icon\"\n          src=\"baseline-cloud_upload-24px.svg\"\n        />\n        <span>Upload Files</span>\n      </div>\n    );\n  }\n}\n\nexport default Dropzone;\n","import React, { Component } from \"react\";\nimport \"./Progress.css\";\n\nclass Progress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"ProgressBar\">\n        <div\n          className=\"Progress\"\n          style={{ width: this.props.progress + \"%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Progress;","import React, { Component } from \"react\";\nimport Dropzone from \"./Dropzone\";\nimport \"./Upload.css\";\nimport Progress from \"./Progress\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      uploading: false,\n      uploadProgress: {},\n      successfullUploaded: false\n    };\n\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.uploadFiles = this.uploadFiles.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n    this.renderActions = this.renderActions.bind(this);\n  }\n\n  onFilesAdded(files) {\n    this.setState(prevState => ({\n      files: prevState.files.concat(files)\n    }));\n  }\n\n  async uploadFiles() {\n    this.setState({ uploadProgress: {}, uploading: true });\n    const promises = [];\n    this.state.files.forEach(file => {\n      promises.push(this.sendRequest(file));\n    });\n    try {\n      await Promise.all(promises);\n\n      this.setState({ successfullUploaded: true, uploading: false });\n    } catch (e) {\n      // Not Production ready! Do some error handling here instead...\n      this.setState({ successfullUploaded: true, uploading: false });\n    }\n  }\n\n  sendRequest(file) {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n\n      req.upload.addEventListener(\"progress\", event => {\n        if (event.lengthComputable) {\n          const copy = { ...this.state.uploadProgress };\n          copy[file.name] = {\n            state: \"pending\",\n            percentage: (event.loaded / event.total) * 100\n          };\n          this.setState({ uploadProgress: copy });\n        }\n      });\n\n      req.upload.addEventListener(\"load\", event => {\n        const copy = { ...this.state.uploadProgress };\n        copy[file.name] = { state: \"done\", percentage: 100 };\n        this.setState({ uploadProgress: copy });\n        resolve(req.response);\n      });\n\n      req.upload.addEventListener(\"error\", event => {\n        const copy = { ...this.state.uploadProgress };\n        copy[file.name] = { state: \"error\", percentage: 0 };\n        this.setState({ uploadProgress: copy });\n        reject(req.response);\n      });\n\n      const formData = new FormData();\n      formData.append(\"file\", file, file.name);\n\n      req.open(\"POST\", \"http://127.0.0.1:8888/upload\");\n      req.send(formData);\n    });\n  }\n\n  renderProgress(file) {\n    const uploadProgress = this.state.uploadProgress[file.name];\n    if (this.state.uploading || this.state.successfullUploaded) {\n      return (\n        <div className=\"ProgressWrapper\">\n          <Progress progress={uploadProgress ? uploadProgress.percentage : 0} />\n          <img\n            className=\"CheckIcon\"\n            alt=\"done\"\n            src=\"baseline-check_circle_outline-24px.svg\"\n            style={{\n              opacity:\n                uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\n            }}\n          />\n        </div>\n      );\n    }\n  }\n\n  renderActions() {\n    if (this.state.successfullUploaded) {\n      return (\n        <button\n          onClick={() =>\n            this.setState({ files: [], successfullUploaded: false })\n          }\n        >\n          Clear\n        </button>\n      );\n    } else {\n      return (\n        <button\n          disabled={this.state.files.length < 0 || this.state.uploading}\n          onClick={this.uploadFiles}\n        >\n          Upload\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Upload\">\n        <span className=\"Title\">Upload Files</span>\n        <div className=\"Content\">\n          <div>\n            <Dropzone\n              onFilesAdded={this.onFilesAdded}\n              disabled={this.state.uploading || this.state.successfullUploaded}\n            />\n          </div>\n          <div className=\"Files\">\n            {this.state.files.map(file => {\n              return (\n                <div key={file.name} className=\"Row\">\n                  <span className=\"Filename\">{file.name}</span>\n                  {this.renderProgress(file)}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"Actions\">{this.renderActions()}</div>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n","import React, { Component } from \"react\";\n// React won't pickup the css modules without the name \".module.css\"\n// - this is useful cuz we can use autocomplete now by using this\nimport styles from \"./styles/css/App.module.css\";\nimport MyNavBar from \"./components/MyNavBar\";\nimport Hero from \"./components/Hero\";\nimport ExampleWrapper from \"./components/ExampleWrapper\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Upload from \"./components/Uploader/Upload\";\n\nimport { GoFlame } from \"react-icons/go\";\n\nclass App extends Component {\n  render() {\n    console.log(styles.black);\n    return (\n      <div>\n        <MyNavBar />\n        <Hero />\n        <Jumbotron>\n          <Container>\n            <div className={styles.App}>\n              <header className={styles.App_header}>\n                <h2 className={styles.header}>Upload your file here!</h2>\n                <Upload />\n              </header>\n            </div>\n          </Container>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}